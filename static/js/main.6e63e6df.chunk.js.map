{"version":3,"sources":["components/KakaoMap/MapLoader.tsx","components/KakaoMap/index.tsx","components/Dot.tsx","pages/Map.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Dimmer","styled","div","_templateObject","_taggedTemplateLiteral","MapLoader","props","_useInjectKakaoMapApi","useInjectKakaoMapApi","appkey","process","libraries","retries","loading","error","React","createElement","Fragment","Map","paddleAnimation","keyframes","Circle","_templateObject2","_ref","size","concat","_ref2","_ref3","_ref4","_ref5","color","animate","css","_templateObject3","Container","_templateObject4","Dot","_ref6","_ref6$color","_ref6$size","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","randomColor","Math","random","toString","_useState","useState","_useState2","_slicedToArray","markerPositions","setMarkerPositions","_useState3","_useState4","level","setLevel","useEffect","timer","_asyncToGenerator","_callee","_yield$fetch$then$the","logs","index","colors","_context","fetch","r","json","files","content","JSON","parse","setInterval","_logs$index","vehicles","task","id","vMarkers","map","lat","lng","tMarkers","_ref7","pick_lat","pick_lng","drop_lat","drop_lng","flat","_toConsumableArray","clearInterval","KakaoMap","center","onZoomChanged","getLevel","style","width","height","_ref8","CustomOverlayMap","position","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6e63e6df.chunk.js","sourcesContent":["import React, { useEffect } from \"react\"\n\nimport KakaoMapSDK, {\n  Map,\n  useInjectKakaoMapApi,\n  useMap,\n} from \"react-kakao-maps-sdk\"\nimport styled from \"styled-components\"\n\ntype MapProps = KakaoMapSDK.MapProps & {\n  style?: React.CSSProperties\n}\n\nconst Dimmer = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: rgb(0, 0, 0, 0.5);\n  backdrop-filter: blur(5px);\n`\n\nexport default function MapLoader(props: MapProps): React.ReactElement {\n  const { loading, error } = useInjectKakaoMapApi({\n    appkey: process.env.REACT_APP_KAKAO_MAP_API_KEY as string,\n    libraries: [\"services\", \"clusterer\"],\n    retries: 3,\n  })\n  return (\n    <>\n      {loading || error ? (\n        <Dimmer />\n      ) : (\n        <Map {...(props as KakaoMapSDK.MapProps)} />\n      )}\n    </>\n  )\n}\n","import MapLoader from \"./MapLoader\"\n\nexport default MapLoader\n","import React from \"react\"\nimport styled, { css, keyframes } from \"styled-components\"\n\nconst paddleAnimation = keyframes`\n  from {\n    transform: scale(1.0);\n    opacity: 1.0;\n  }\n  to {\n    transform: scale(2.0);\n    opacity: 0.0;\n  }\n`\n\ntype CircleStyleProps = {\n  size: number\n  color: string\n  animate?: boolean\n}\n\nconst Circle = styled.div`\n  position: absolute;\n  width: ${({ size }: CircleStyleProps) => `${size}em`};\n  height: ${({ size }: CircleStyleProps) => `${size}em`};\n  left: ${({ size }: CircleStyleProps) => `-${size / 2}em`};\n  top: ${({ size }: CircleStyleProps) => `-${size / 2}em`};\n  background: ${({ color }: CircleStyleProps) => color};\n  border-radius: 8rem;\n\n  ${(props: CircleStyleProps) =>\n    props.animate &&\n    css`\n      animation: ${paddleAnimation} 1s ease-in-out infinite;\n    `}\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\ntype DotProps = {\n  color?: string\n  size?: number\n}\n\nconst Dot = ({ color = \"dodgerblue\", size = 2 }: DotProps) => {\n  return (\n    <Container>\n      <Circle color={color} size={size} animate={true} />\n      <Circle color={color} size={size} />\n    </Container>\n  )\n}\n\nexport default Dot\n","/* global kakao */\n\nimport React, { useEffect, useState } from \"react\"\nimport KakaoMap from \"../components/KakaoMap\"\n\nimport Dot from \"../components/Dot\"\nimport { CustomOverlayMap } from \"react-kakao-maps-sdk\"\n\ntype MarkerPosition = {\n  key: string | null\n  color?: string\n  size: number\n  lat: number\n  lng: number\n}\n\ninterface ColorName {\n  [key: string]: string\n}\n\nconst randomColor = () => \"#\" + Math.random().toString(16).slice(-6)\n\nexport default function Map() {\n  const latitude = 37.52897\n  const longitude = 126.917101\n  const [markerPositions, setMarkerPositions] = useState<Array<MarkerPosition>>(\n    []\n  )\n  const [level, setLevel] = useState<number>(3)\n\n  useEffect(() => {\n    let timer: any = null\n    ;(async () => {\n      // dummy test file\n      const { logs } = await fetch(\n        \"https://api.github.com/gists/43807f8eee7f54d19f167130234fdc15\"\n      )\n        .then((r) => r.json())\n        .then(({ files }) => files[\"20230308005358.min.json\"])\n        .then(({ content }) => JSON.parse(content))\n\n      if (!logs) return\n\n      let index = 0\n      const colors: ColorName = {}\n\n      timer = setInterval(() => {\n        if (index >= logs.length) {\n          return\n        }\n        const { vehicles, task } = logs[index]\n        index += 1\n\n        vehicles.forEach(({ name }: any) => {\n          if (!(name in colors)) {\n            colors[name] = randomColor()\n          }\n        })\n        task.forEach(({ id }: any) => {\n          const name = `task-${id}`\n          if (!(name in colors)) {\n            colors[name] = randomColor()\n          }\n        })\n\n        const vMarkers = vehicles.map(({ name, lat, lng }: any) => ({\n          key: name,\n          color: colors[name],\n          size: 6,\n          lat,\n          lng,\n        }))\n\n        const tMarkers = task\n          .map(({ id, pick_lat, pick_lng, drop_lat, drop_lng }: any) => [\n            {\n              key: `task-${id}-pick`,\n              color: colors[`task-${id}`],\n              size: 3,\n              lat: pick_lat,\n              lng: pick_lng,\n            },\n            {\n              key: `task-${id}-drop`,\n              color: colors[`task-${id}`],\n              size: 3,\n              lat: drop_lat,\n              lng: drop_lng,\n            },\n          ])\n          .flat()\n\n        setMarkerPositions([...vMarkers, ...tMarkers])\n      }, 33)\n    })()\n    return () => clearInterval(timer)\n  }, [])\n\n  return (\n    <>\n      <KakaoMap\n        center={{\n          lat: latitude,\n          lng: longitude,\n        }}\n        level={level}\n        onZoomChanged={(map) => setLevel(map.getLevel())}\n        style={{\n          width: \"100%\",\n          height: \"100vh\",\n        }}\n      >\n        <>\n          {markerPositions.map(\n            ({ key, color, size, lat, lng }: MarkerPosition) => (\n              <CustomOverlayMap\n                key={key}\n                position={{\n                  lat,\n                  lng,\n                }}\n              >\n                <Dot color={color || \"dodgerblue\"} size={size / level} />\n              </CustomOverlayMap>\n            )\n          )}\n        </>\n      </KakaoMap>\n    </>\n  )\n}\n","import React from \"react\"\nimport Map from \"./pages/Map\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}